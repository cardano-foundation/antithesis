name: "Test cardano-node"
env:
  TESTNET: "cardano_node_master"
  REGISTRY: ghcr.io/cardano-foundation/antithesis
  EMAILS: 'antithesis@cardanofoundation.org'
  DURATION: 300 # in minutes
on:
  # can be dispatched manually
  workflow_dispatch:
     inputs:
       test:
        description: 'Test configuration to run (a directory in compose/testnets)'
        required: true
        default: cardano_node_master
        type: string
       duration:
        description: 'Test duration (in hours)'
        required: false
        default: 5
        type: number
  schedule:
    # run every 6 hours
    - cron:  '5 1,7,13,19 * * *'

jobs:
  run-cardano-node:
    runs-on: ubuntu-latest

    # required permissions to be able to push to registry
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
    - name: ðŸš§ Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: ðŸ“¥ Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.ref_name || '' }}

    - name: ðŸ”‘ Login Docker Registry
      uses: docker/login-action@v3
      with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    - id: anti
      name: Get latest antithesis release tag
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        repository: cardano-foundation/antithesis

    - name: Download anti CLI from latest release
      uses: robinraju/release-downloader@v1.10
      with:
        repository: cardano-foundation/antithesis
        tag: ${{ steps.anti.outputs.release }}
        fileName: "anti-*-linux64.tar.gz"
        out-file-path: "./anti-cli"
        extract: true

    - name: Install anti
      run: |
        echo "Release: ${{ steps.anti.outputs.release }}"
        ls -la anti-cli
        sudo install -m 0755 anti-cli/anti /usr/local/bin/anti

    - name: Submit test
      env:
        ANTI_GITHUB_PAT: ${{ secrets.ANTI_GITHUB_PAT }}
        ANTI_WALLET_FILE: wallet.json
        ANTI_SSH_FILE: cfhal_ed25519
        ANTI_MPFS_HOST: ${{ vars.ANTI_MPFS_HOST }}
        ANTI_TOKEN_ID: ${{ vars.ANTI_TOKEN_ID }}
        ANTI_PLATFORM: github
        ANTI_REQUESTER: cfhal
      run: |
        set -euo pipefail
        printf '%s' "${{ secrets.ANTI_REQUESTER_WALLET }}" | base64 --decode > $ANTI_WALLET_FILE
        printf '%s' "${{ secrets.ANTI_SSH_KEY }}" > $ANTI_SSH_FILE
        TRY=$(anti facts test-runs --whose cfhal | jq 'map(select(.key.commitId == "${{ github.sha }}")) | length')
        TRY=$(($TRY + 1)) # start with try=1
        echo "TRY=$TRY"
        # anti requester create-test -d compose/testnets/cardano_node_with_adversary -c ${{ github.sha }} -r "cardano-foundation/antithesis" --try $TRY -t 1
        #
    - name: Wait for results
      run: |
        echo "waiting... (todo: poll results)"
