name: "Test cardano-node"
env:
  TESTNET: cardano_node_latest
  REGISTRY: ghcr.io
  EMAILS: 'antithesis@cardanofoundation.org'
  DURATION: 5 # in hours
on:
  # can be dispatched manually
  workflow_dispatch:
     inputs:
       test:
        description: 'Test name'
        required: false
        default: $TESTNET
        type: string
  # FIXME: remove before mergin
  push:
  schedule:
    # run every 6 hours
    - cron:  '5 1,7,13,19 * * *'

jobs:
  run-cardano-node:
    runs-on: ubuntu-latest

    # required permissions to be able to push to registry
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
    - name: üöß Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: üì• Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.ref_name || '' }}

    - name: üîë Login Docker Registry
      uses: docker/login-action@v3
      with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    - name: üèó  Build images
      working-directory: compose
      run: |
        make build testnet=${{ env.TESTNET }} registry=${{ env.REGISTRY }}/

    - name: üö¢ Push images
      working-directory: compose
      run: |
        make push testnet=${{ env.TESTNET }} registry=${{ env.REGISTRY }}/

    # this is where we should send a request on-chain
    # for now we use the GHA provided by AT
    - name: üèÉ Trigger Antithesis
      uses: antithesishq/antithesis-trigger-action@v0.8
      with:
        notebook_name: cardano
        tenant: cardano
        username: ${{ secrets.ANTITHESIS_USERNAME }}
        password: ${{ secrets.ANTITHESIS_PASSWORD }}
        github_token: ${{ secrets.GH_PAT }}
        images: ${{ env.REGISTRY }}/${{ env.TESTNET }}:latest;${{ env.REGISTRY }}/${{ env.TESTNET }}_sidecar:latest;${{ env.REGISTRY }}/${{ env.TESTNET }}_tracer:latest;${{ env.REGISTRY }}/${{ env.TESTNET }}_tracer-sidecar:latest
        config_image: ${{ env.REGISTRY }}/${{ env.TESTNET }}_config:latest
        description: "Run ${{ env.TESTNET }}"
        email_recipients: ${{ env.EMAILS }}
        test_name: "${{ inputs.test }}"
        additional_parameters: |-
          duration=${{ env.DURATION }}
