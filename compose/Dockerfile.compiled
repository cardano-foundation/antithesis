ARG CARDANO_CLI_VERSION="${CARDANO_CLI_VERSION:-10.8.0.0}"
ARG CARDANO_NODE_VERSION="${CARDANO_NODE_VERSION:-10.4.1}"
ARG UV_VERSION="${UV_VERSION:-0.6.11}"
# Blink Labs images are built from source on Debian Bookworm
FROM ghcr.io/blinklabs-io/cardano-cli:${CARDANO_CLI_VERSION} AS cardano-cli
FROM ghcr.io/blinklabs-io/cardano-node:${CARDANO_NODE_VERSION} AS cardano-node
FROM ghcr.io/astral-sh/uv:${UV_VERSION} AS uv

FROM docker.io/debian:stable-slim AS build

# Set time zone
ENV TZ="UTC"
RUN ln -snf /usr/share/zoneinfo/${TZ} /etc/localtime && \
    echo ${TZ} > /etc/timezone

# Install packages required in build stage
RUN apt update && \
    apt install -y --no-install-recommends \
        ca-certificates \
        curl \
        git \
        tar

# Copy cardano-cli from image
COPY --from=cardano-cli --chown=root:root /usr/local/bin/cardano-cli /usr/local/bin/cardano-cli
# Copy cardano-node from image
COPY --from=cardano-node --chown=root:root /usr/local/bin/cardano-node /usr/local/bin/cardano-node
# Copy libsecp256k1 (also debian:bookwork-slim AKA stable-slim)
COPY --from=cardano-node --chown=root:root /usr/local/lib/ /usr/local/lib/
# Copy uv from image
COPY --from=uv --chown=root:root /uv /usr/local/bin/uv

# Create cardano-node source directory
RUN install --directory --owner=root --group=root --mode=0755 /usr/local/src/cardano-node

# Clone testnet-generation-tool.git repository
WORKDIR /usr/local/src
RUN git clone --branch main https://github.com/cardano-foundation/testnet-generation-tool.git

# Download testnet-generation-tool dependencies
WORKDIR /usr/local/src/testnet-generation-tool
RUN uv sync

# Copy testnet.yaml specification
COPY --chown=root:root .testnet.yaml /usr/local/src/testnet-generation-tool/testnet.yaml

# Build testnet configuration files
RUN uv run python3 genesis-cli.py testnet.yaml -o /tmp/testnet -c generate

# Remove dynamic topology.json
RUN find /tmp/testnet -type f -name 'topology.json' -exec rm -f '{}' ';'

#---------------------------------------------------------------------

FROM docker.io/debian:stable-slim AS main

# Set environment variables
ENV CARDANO_NODE_SOCKET_PATH="/opt/cardano-node/data/db/node.socket"

# Set time zone
ENV TZ="UTC"
RUN ln -snf /usr/share/zoneinfo/${TZ} /etc/localtime && \
    echo ${TZ} > /etc/timezone

# Install packages required in main stage
RUN apt update && \
    apt install -y --no-install-recommends \
        dnsutils \
        iproute2 \
        iputils-ping \
        jq \
        less \
        lsof \
        netbase \
        netcat-openbsd \
        openssl \
        procps \
        tcpdump \
        telnet \
        vim

# Copy binaries/libraries from build stage
COPY --from=build --chown=root:root /usr/local/bin/cardano-cli /usr/local/bin/cardano-cli
COPY --from=build --chown=root:root /usr/local/bin/cardano-node /usr/local/bin/cardano-node
# Stick this into existing LD_LIBRARY_PATH
COPY --from=build --chown=root:root /usr/local/lib/ /usr/lib/

# Create cardano group and user
RUN groupadd --gid 10000 cardano && \
    useradd --comment 'cardano' --create-home --gid 10000 --password '!' --shell '/bin/bash' --uid 10000 cardano

# Create cardano-node directories
RUN install --directory --owner=root --group=root --mode=0755 /opt/cardano-node && \
    install --directory --owner=cardano --group=cardano --mode=0750 /opt/cardano-node/config && \
    install --directory --owner=cardano --group=cardano --mode=0750 /opt/cardano-node/data && \
    install --directory --owner=cardano --group=cardano --mode=0750 /opt/cardano-node/data/db && \
    install --directory --owner=cardano --group=cardano --mode=0750 /opt/cardano-node/log && \
    install --directory --owner=cardano --group=cardano --mode=0750 /opt/cardano-node/pools

# Copy pool config and key material
COPY --from=build --chown=cardano:cardano /tmp/testnet/pools /opt/cardano-node/pools
COPY --from=build --chown=cardano:cardano /tmp/testnet/utxos /opt/cardano-node/utxos

# Copy canary_tx.sh
COPY canary_tx.sh /
RUN chmod 0755 /canary_tx.sh

# Copy cardano-node.sh
COPY cardano-node.sh /
RUN chmod 0755 /cardano-node.sh

USER cardano
#STOPSIGNAL SIGINT

CMD ["/cardano-node.sh"]
